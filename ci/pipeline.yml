---
groups:
- name: main
  jobs:
  - Build-and-test
  - Deploy-to-dev-version
  - System-test
  - Build-upon-MR-approval
  - Deploy-to-prod
  - Acceptance-test
  - Ship-it

resources:
- name: source-repo
  type: git
  source:
    branch: ((git.source.branch.dev))
    uri: ((git.source.uri))
    private_key: ((git.private_key))
- name: pipeline-repo
  type: git
  source:
    branch: ((git.pipeline.branch))
    uri: ((git.pipeline.uri))
    private_key: ((git.private_key))
- name: release-candidate-dev
  type: git
  source:
    branch: ((git.out.branch.dev))
    uri: ((git.out.uri))
    private_key: ((git.private_key))
- name: release-candidate-prod
  type: git
  source:
    branch: ((git.out.branch.prod))
    uri: ((git.out.uri))
    private_key: ((git.private_key))
- name: deployment-approval
  type: git
  source:
    branch: ((git.source.branch.prod))
    uri: ((git.source.uri))
    private_key: ((git.private_key))
- name: pcf-dev
  type: cf
  source:
    api: ((pws.api))
    organization: ((pws.organization))
    space: ((pws.space.dev))
    username: ((pws.username))
    password: ((pws.password))
    skip_cert_check: true
- name: pcf-prod
  type: cf
  source:
    api: ((pws.api))
    organization: ((pws.organization))
    space: ((pws.space.prod))
    username: ((pws.username))
    password: ((pws.password))
    skip_cert_check: true

jobs:
- name: Build-and-test
  plan:
  - get: source-repo
  - get: pipeline-repo
  - get: release-candidate-dev
  - task: task-build-and-test
    file: pipeline-repo/ci/tasks/build-and-test.yml
    params:
      GIT_EMAIL: ((git.email))
      GIT_USERNAME: ((git.username))
  - put: release-candidate-dev
    params:
      repository: build-out-repo
      rebase: true
  - task: task-update-deploy-version
    file: pipeline-repo/ci/tasks/update-deploy-version.yml
    params:
      CONCOURSE_URL: ((concourse.url))
      CONCOURSE_PIPELINE: ((concourse.pipeline))
      CONCOURSE_USERNAME: ((concourse.username))
      CONCOURSE_PASSWORD: ((concourse.password))

- name: Deploy-to-dev-version
  plan:
  - get: pipeline-repo
  - get: source-repo
  - get: release-candidate-dev
    passed: [Build-and-test]
    trigger: true
  - task: task-prepare-manifest
    file: pipeline-repo/ci/tasks/prepare-manifest.yml
  - put: pcf-dev
    params:
      manifest: output/manifest.yml

- name: System-test
  plan:
  - get: pipeline-repo
  - get: source-repo
  - get: release-candidate-dev
    passed: [Deploy-to-dev-version]
    trigger: true
  - task: task-system-test
    file: pipeline-repo/ci/tasks/system-test.yml
  - task: task-create-merge-request
    file: pipeline-repo/ci/tasks/create-merge-request.yml
    params:
      GITLAB_HOST: ((git.host))
      GITLAB_USERNAME: ((git.username))
      GITLAB_TOKEN: ((git.token))
      SOURCE_DEV_BRANCH: ((git.source.branch.dev))
      SOURCE_PROD_BRANCH: ((git.source.branch.prod))

- name: Build-upon-MR-approval
  disable_manual_trigger: true
  plan:
  - get: pipeline-repo
    passed: [System-test]
  - get: release-candidate-prod
  - get: deployment-approval
    trigger: true
  - task: task-build-prod
    file: pipeline-repo/ci/tasks/build-prod.yml
    params:
      GIT_EMAIL: ((git.email))
      GIT_USERNAME: ((git.username))
  - put: release-candidate-prod
    params:
      repository: build-prod-out-repo
      rebase: true

- name: Deploy-to-prod
  plan:
  - get: pipeline-repo
  - get: deployment-approval
  - get: release-candidate-prod
    passed: [Build-upon-MR-approval]
    trigger: true
  - task: task-decide-deploy-color
    file: pipeline-repo/ci/tasks/decide-deploy-color.yml
    params:
      PWS_API: ((pws.api))
      PWS_ORG: ((pws.organization))
      PWS_SPACE: ((pws.space.prod))
      PWS_APP_HOSTNAME: ((pws.app.hostname))
      PWS_APP_DOMAIN: ((pws.app.domain))
      PWS_USER: ((pws.username))
      PWS_PWD: ((pws.password))
  - task: task-prepare-manifest
    file: pipeline-repo/ci/tasks/prepare-manifest-prod.yml
    params:
      PWS_APP_HOSTNAME: ((pws.app.hostname))
  - put: pcf-prod
    params:
      manifest: output-prod/manifest.yml

- name: Acceptance-test
  plan:
  - get: pipeline-repo
  - get: release-candidate-prod
    passed: [Deploy-to-prod]
    trigger: true
  - task: task-acceptance-test
    file: pipeline-repo/ci/tasks/system-test.yml

- name: Ship-it
  plan:
  - get: pipeline-repo
    passed: [Acceptance-test]
    trigger: false
  - task: task-update-routes
    file: pipeline-repo/ci/tasks/update-routes.yml
    params:
      PWS_API: ((pws.api))
      PWS_ORG: ((pws.organization))
      PWS_SPACE: ((pws.space.prod))
      PWS_APP_HOSTNAME: ((pws.app.hostname))
      PWS_APP_DOMAIN: ((pws.app.domain))
      PWS_USER: ((pws.username))
      PWS_PWD: ((pws.password))

# jobs:
# - name: Build-and-test
#   plan:
#   - get: source-repo
#     trigger: true
#   - get: pipeline-repo
#   - get: out-repo
#   - task: task-build
#     file: pipeline-repo/ci/tasks/build-and-test.yml
#     params:
#       GIT_EMAIL: ((git.email))
#       GIT_USERNAME: ((git.username))
#   - put: out-repo
#     params:
#       repository: build-out-repo
#       rebase: true
#   - task: task-update-deploy-version
#     file: pipeline-repo/ci/tasks/update-deploy-version.yml
#     params:
#       CONCOURSE_URL: ((concourse.url))
#       CONCOURSE_PIPELINE: ((concourse.pipeline))
#       CONCOURSE_USERNAME: ((concourse.username))
#       CONCOURSE_PASSWORD: ((concourse.password))
#
# - name: Deploy-version
#   plan:
#   - get: pipeline-repo
#   - get: out-repo
#     trigger: true
#     passed: [Build-and-test]
#   - task: task-decide-deploy-color
#     file: pipeline-repo/ci/tasks/decide-deploy-color.yml
#     params:
#       PWS_API: ((pws.api))
#       PWS_ORG: ((pws.organization))
#       PWS_SPACE: ((pws.space))
#       PWS_APP_HOSTNAME: ((pws.app.hostname))
#       PWS_APP_DOMAIN: ((pws.app.domain))
#       PWS_USER: ((pws.username))
#       PWS_PWD: ((pws.password))
#   - task: task-prepare-manifest
#     file: pipeline-repo/ci/tasks/prepare-manifest.yml
#     params:
#       PWS_APP_HOSTNAME: ((pws.app.hostname))
#   - put: pcf
#     params:
#       manifest: output/manifest.yml
#       path: output/app.jar
#   - task: task-update-routes
#     file: pipeline-repo/ci/tasks/update-routes.yml
#     params:
#       PWS_API: ((pws.api))
#       PWS_ORG: ((pws.organization))
#       PWS_SPACE: ((pws.space))
#       PWS_APP_HOSTNAME: ((pws.app.hostname))
#       PWS_APP_DOMAIN: ((pws.app.domain))
#       PWS_USER: ((pws.username))
#       PWS_PWD: ((pws.password))
#
# - name: System-test
#   plan:
#   - get: pipeline-repo
#   - get: pcf
#     trigger: true
#     passed: [Deploy-version]
#   - task: task-system-test
#     file: pipeline-repo/ci/tasks/system-test.yml
#
# - name: Rollback
#   plan:
#   - get: pipeline-repo
#   - task: task-rollback-routes
#     file: pipeline-repo/ci/tasks/rollback-routes.yml
#     params:
#       PWS_API: ((pws.api))
#       PWS_ORG: ((pws.organization))
#       PWS_SPACE: ((pws.space))
#       PWS_APP_HOSTNAME: ((pws.app.hostname))
#       PWS_APP_DOMAIN: ((pws.app.domain))
#       PWS_USER: ((pws.username))
#       PWS_PWD: ((pws.password))
